{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/bcgov/harvest-restrictions/main/sources.schema.json",
    "title": "Harvest restrictions data sources",
    "description": "List of data sources used to generate harvest restrictions, in order of hierarchy",
    "type": "object",
    "properties": {
        "name": {
            "description": "Name of the layer",
            "type": "text"
        },
        "alias": {
            "description": "Unique slug used to name/identify the source when processing",
            "type": "string"
        },
        "class_number": {
            "description": "Number of the generalized harvest restriction class associatated with the layer",
            "type": "number",
            "enum": [1, 2, 3, 4, 5]
        },
        "class_name": {
            "description": "Name of the generalized harvest restriction class associatated with the layer",
            "type": "string"
        },
        "is_file": {
            "description": "True if the source is a file",
            "type": "boolean",
        },
        "source": {
            "description": "Full name of the BCGW table to use as source (eg, WHSE_ADMIN_BOUNDARIES.CLAB_NATIONAL_PARKS) or url/path of a file based source readable by GDAL/OGR",
            "type": "string"
        },
        "layer": {
            "description": "Layer to use within a file based source",
            "type": "string"
        },
        "name_column": {
            "description": "Text column in bcgw_source or url_source/url_source_layer to use as source for restriction name",
            "type": "string"
        },
        "query": {
            "description": "Query to subset data in the source - ECQL for BCGW sources, OGR sql for files from urls",
            "type": "string"
        },
    "required": ["name", "alias", "class_number", "is_file", "class_name", "source"],
    "if": {
        "properties": {
            "is_file": {
                "const": true
            }
        }
    },
    "then": {
        "properties": {
            "layer": {
                "type": "string"
            }
        }
    },
}